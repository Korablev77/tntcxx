PROJECT(tntcxx)

CMAKE_MINIMUM_REQUIRED(VERSION 3.5)

IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF()

MESSAGE(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
FIND_PACKAGE (benchmark QUIET)

SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_C_STANDARD 11)
ADD_COMPILE_OPTIONS(-Wall -Wextra -Werror)

INCLUDE_DIRECTORIES(.)
INCLUDE_DIRECTORIES(./src)
INCLUDE_DIRECTORIES(./third_party/libev)
ADD_LIBRARY(ev STATIC third_party/libev/ev.c)
TARGET_COMPILE_DEFINITIONS(ev PRIVATE EV_STANDALONE=1)
TARGET_COMPILE_OPTIONS(ev PRIVATE -w)
ADD_EXECUTABLE(MempoolUnitTest.test src/Utils/Mempool.hpp test/MempoolUnitTest.cpp)
ADD_EXECUTABLE(CStrUnit.test src/Utils/CStr.hpp test/CStrUnitTest.cpp)
ADD_EXECUTABLE(Base64Unit.test src/Utils/Base64.hpp test/Base64UnitTest.cpp)
ADD_EXECUTABLE(BufferUnit.test src/Buffer/Buffer.hpp test/BufferUnitTest.cpp)
ADD_EXECUTABLE(BufferPerf.test src/Buffer/Buffer.hpp test/BufferPerfTest.cpp)
ADD_EXECUTABLE(EncDecUnit.test src/mpp/mpp.hpp test/EncDecTest.cpp)
ADD_EXECUTABLE(Client.test src/Client/Connector.hpp test/ClientTest.cpp)
ADD_EXECUTABLE(ClientPerfTest.test src/Client/Connector.hpp test/ClientPerfTest.cpp)
TARGET_LINK_LIBRARIES(ClientPerfTest.test ev)
TARGET_LINK_LIBRARIES(Client.test ev)

IF (benchmark_FOUND)
    ADD_EXECUTABLE(BufferGPerf.test src/Buffer/Buffer.hpp test/BufferGPerfTest.cpp)
    TARGET_LINK_LIBRARIES (BufferGPerf.test benchmark::benchmark)
ENDIF()

ENABLE_TESTING()
ADD_TEST(NAME MempoolUnitTest.test COMMAND MempoolUnitTest.test)
ADD_TEST(NAME CStrUnit.test COMMAND CStrUnit.test)
ADD_TEST(NAME Base64Unit.test COMMAND Base64Unit.test)
ADD_TEST(NAME BufferUnit.test COMMAND BufferUnit.test)
ADD_TEST(NAME EncDecUnit.test COMMAND EncDecUnit.test)
ADD_TEST(NAME Client.test COMMAND Client.test)
